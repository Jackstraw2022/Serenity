import type { ClassNames } from "./classname";
import type { Signalish } from "./signal-like";
import type { StyleProperties } from "./style-attributes";

export interface HTMLAttributes<T> {
    accept?: Signalish<string>;
    acceptCharset?: Signalish<string>;
    accessKey?: Signalish<string>;
    action?: Signalish<string>;
    allow?: Signalish<string>;
    allowFullscreen?: Signalish<boolean>;
    alt?: Signalish<string>;
    as?: Signalish<string>;
    async?: Signalish<boolean>;
    autocapitalize?: Signalish<string>;
    autocomplete?: Signalish<string>;
    autocorrect?: Signalish<string>;
    autofocus?: Signalish<boolean>;
    autoplay?: Signalish<boolean>;
    capture?: Signalish<boolean | string>;
    cellPadding?: Signalish<number | string>;
    cellSpacing?: Signalish<number | string>;
    charset?: Signalish<string>;
    checked?: Signalish<boolean>;
    class?: Signalish<ClassNames>;
    className?: Signalish<ClassNames>;
    cols?: Signalish<number>;
    colSpan?: Signalish<number>;
    colspan?: Signalish<number>;
    content?: Signalish<string>;
    contentEditable?: Signalish<boolean>;
    controls?: Signalish<boolean>;
    coords?: Signalish<string>;
    crossOrigin?: Signalish<string>;
    data?: Signalish<string>;
    dataset?: Signalish<{ [key: string]: string } | undefined>;
    dateTime?: Signalish<string>;
    default?: Signalish<boolean>;
    defer?: Signalish<boolean>;
    dir?: Signalish<"auto" | "rtl" | "ltr">;
    disabled?: Signalish<boolean>;
    disableRemotePlayback?: Signalish<boolean>;
    download?: Signalish<string | boolean>;
    decoding?: Signalish<"sync" | "async" | "auto">;
    draggable?: Signalish<"true" | "false">;
    enctype?: Signalish<string>;
    enterKeyHint?: Signalish<"enter" | "done" | "go" | "next" | "previous" | "search" | "send">;
    form?: Signalish<string>;
    formAction?: Signalish<string>;
    formEnctype?: Signalish<string>;
    formMethod?: Signalish<string>;
    formNoValidate?: Signalish<boolean>;
    formTarget?: Signalish<string>;
    frameBorder?: Signalish<number | string>;
    headers?: Signalish<string>;
    height?: Signalish<number | string>;
    hidden?: Signalish<boolean>;
    high?: Signalish<number>;
    href?: Signalish<string>;
    hreflang?: Signalish<string>;
    for?: Signalish<string>;
    htmlFor?: Signalish<string>;
    httpEquiv?: Signalish<string>;
    id?: Signalish<string>;
    innerText?: Signalish<string | undefined>;
    inputMode?: Signalish<string>;
    integrity?: Signalish<string>;
    is?: Signalish<string>;
    kind?: Signalish<string>;
    label?: Signalish<string>;
    lang?: Signalish<string>;
    list?: Signalish<string>;
    loading?: Signalish<"eager" | "lazy">;
    loop?: Signalish<boolean>;
    low?: Signalish<number>;
    marginHeight?: Signalish<number>;
    marginWidth?: Signalish<number>;
    max?: Signalish<number | string>;
    maxLength?: Signalish<number>;
    media?: Signalish<string>;
    method?: Signalish<string>;
    min?: Signalish<number | string>;
    minLength?: Signalish<number>;
    multiple?: Signalish<boolean>;
    muted?: Signalish<boolean>;
    name?: Signalish<string>;
    namespaceURI?: Signalish<string | undefined>;
    nonce?: Signalish<string>;
    noValidate?: Signalish<boolean>;
    open?: Signalish<boolean>;
    optimum?: Signalish<number>;
    pattern?: Signalish<string>;
    ping?: Signalish<string>;
    placeholder?: Signalish<string>;
    playsInline?: Signalish<boolean>;
    poster?: Signalish<string>;
    preload?: Signalish<string>;
    readOnly?: Signalish<boolean>;
    referrerPolicy?: Signalish<"no-referrer" | "no-referrer-when-downgrade" | "origin" | "origin-when-cross-origin" | "same-origin" | "strict-origin" | "strict-origin-when-cross-origin" | "unsafe-url">;
    rel?: Signalish<string>;
    required?: Signalish<boolean>;
    role?: Signalish<string>;
    rows?: Signalish<number>;
    rowSpan?: Signalish<number>;
    rowspan?: Signalish<number>;
    sandbox?: Signalish<string>;
    scope?: Signalish<string>;
    scrolling?: Signalish<string>;
    selected?: Signalish<boolean>;
    shape?: Signalish<string>;
    size?: Signalish<number>;
    sizes?: Signalish<string>;
    slot?: Signalish<string>;
    span?: Signalish<number>;
    spellcheck?: Signalish<boolean>;
    spellCheck?: Signalish<boolean>;
    src?: Signalish<string>;
    srcdoc?: Signalish<string>;
    srclang?: Signalish<string>;
    srcset?: Signalish<string>;
    start?: Signalish<number>;
    step?: Signalish<number | string>;
    style?: Signalish<string | StyleProperties>;
    summary?: Signalish<string>;
    tabIndex?: Signalish<number>;
    tabindex?: Signalish<number>;
    target?: Signalish<string>;
    textContent?: Signalish<string | undefined>;
    title?: Signalish<string>;
    type?: Signalish<string>;
    useMap?: Signalish<string>;
    value?: Signalish<string | string[] | number>;
    volume?: Signalish<string | number>;
    width?: Signalish<number | string>;
    wrap?: Signalish<string>;
}

